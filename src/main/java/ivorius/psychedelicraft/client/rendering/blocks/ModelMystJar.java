/*
 *  Copyright (c) 2014, Lukas Tenbrink.
 *  * http://lukas.axxim.net
 */

// Date: 9-3-2014 13:41:43
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package ivorius.psychedelicraft.client.rendering.blocks;

import ivorius.psychedelicraft.block.entity.TileEntityRiftJar;
import net.minecraft.client.model.Model;
import net.minecraft.client.render.VertexConsumer;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelMystJar extends Model
{
    //fields
    ModelRenderer glass1;
    ModelRenderer rope;
    ModelRenderer glass2;
    ModelRenderer knot;
    ModelRenderer cork;
    ModelRenderer glass3;

    public ModelMystJar()
    {
        textureWidth = 64;
        textureHeight = 32;

        glass1 = new ModelRenderer(this, 0, 0);
        glass1.addBox(-4F, 0F, -4F, 8, 5, 8);
        glass1.setRotationPoint(0F, 19F, 0F);
        glass1.setTextureSize(64, 32);
        glass1.mirror = true;
        setRotation(glass1, 0F, 0F, 0F);
        rope = new ModelRenderer(this, 33, 0);
        rope.addBox(-3.5F, 0F, -3.5F, 7, 2, 7);
        rope.setRotationPoint(0F, 17F, 0F);
        rope.setTextureSize(64, 32);
        rope.mirror = true;
        setRotation(rope, 0F, 0F, 0F);
        glass2 = new ModelRenderer(this, 0, 14);
        glass2.addBox(-4F, 0F, -4F, 8, 5, 8);
        glass2.setRotationPoint(0F, 12F, 0F);
        glass2.setTextureSize(64, 32);
        glass2.mirror = true;
        setRotation(glass2, 0F, 0F, 0F);
        knot = new ModelRenderer(this, 33, 2);
        knot.addBox(0F, 0F, -4F, 0, 5, 8);
        knot.setRotationPoint(3.5F, 17F, 0F);
        knot.setTextureSize(64, 32);
        knot.mirror = true;
        setRotation(knot, 0F, 0F, -0.2602503F);
        cork = new ModelRenderer(this, 33, 16);
        cork.addBox(-3F, 0F, -3F, 6, 2, 6);
        cork.setRotationPoint(0F, 10F, 0F);
        cork.setTextureSize(64, 32);
        cork.mirror = true;
        setRotation(cork, 0F, 0F, 0F);
        glass3 = new ModelRenderer(this, 33, 24);
        glass3.addBox(-3F, 0F, -3F, 6, 2, 6);
        glass3.setRotationPoint(0F, 17F, 0F);
        glass3.setTextureSize(64, 32);
        glass3.mirror = true;
        setRotation(glass3, 0F, 0F, 0F);
    }

    public void setAngles(TileEntityRiftJar entity, float tickDelta) {
        cork.rotationPointX = entity.fractionOpen * 2;
        cork.rotateAngleY = entity.fractionOpen * 0.1F;
        knot.rotateAngleZ = -0.2602503F - (entity.fractionHandleUp * (1 + MathHelper.sin(entity.ticksAliveVisual * 0.1f) * 0.1f)) * 0.5f;
    }

    @Override
    public void render(MatrixStack matrices, VertexConsumer vertices, int light, int overlay, float r, float g, float b, float a) {
        glass1.render(f5);
        rope.render(f5);
        glass2.render(f5);
        knot.render(f5);
        cork.render(f5);
        glass3.render(f5);
    }
}
